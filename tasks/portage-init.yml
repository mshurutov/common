---

- name: get current profile
  ansible.builtin.shell: eselect profile list | grep \* | sed -e 's/\]\|\[\|\*\|([^)]*)\|^\s*//g'
  register: current_profile
  ignore_errors: true
  check_mode: no
  tags: portage_init,portage_set_profile

- name: set profile
  ansible.builtin.shell: "eselect profile set {{ portage_profile }}"
  when: portage_profile not in current_profile.stdout
  tags: portage_init,portage_set_profile

- name: check if config directories exist
  ansible.builtin.file:
    path: "/etc/portage/{{ item }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  loop: "{{ portage_etc_dirs }}"
  tags: portage_init,portage_dirs

- name: copy config templates into /etc/portage
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/etc/portage/{{ item.path | regex_replace('.j2') }}"
    owner: root
    group: root
  with_community.general.filetree: "{{ portage_etc_templates_dir }}"
  when: item.state == 'file'
  tags: portage_init,portage_copy_tmpls

# Environment (files in /etc/portage/env and /etc/portage/package.env) have not
# specific names, so it is generated from keys of portage_env dictionary
- name: "create env/{{ item.key }}.conf file"
  ansible.builtin.blockinfile:
    path: "/etc/portage/env/{{ item.key }}.conf"
    owner: root
    group: root
    state: present
    create: true
    block: |
      {% for env_line in item.value.env_vars %}
      {{ env_line }}
      {% endfor %}
  loop: "{{ lookup('ansible.builtin.dict',portage_env,wantlist=True) }}"
  tags: portage_init,portage_env
- name: create portage.env/{{ item.0.key }}.conf file
  ansible.builtin.blockinfile:
    path: "/etc/portage/package.env/{{ item.key }}.conf"
    owner: root
    group: root
    state: present
    create: true
    block: |
      {% for pkg in item.value.pkg %}
      {{ pkg }} {{ item.key }}.conf
      {% endfor %}
  loop: "{{ lookup('ansible.builtin.dict',portage_env,wantlist=True) }}"
  tags: portage_init,portage_env

- name: create /etc/portage/savedconfig/sys-kernel/gentoo-kernel
  ansible.builtin.shell: zcat /proc/config.gz > /etc/portage/savedconfig/sys-kernel/gentoo-kernel
  when: portage_init_force is defined and portage_init_force | bool
  tags: portage_init
  
- name: install base packages
  community.general.portage:
    package: "{{ item }}"
    quiet: yes
    state: present
  loop: "{{ common_portage_syspkgs }}"
  tags: system_install

- name: check if layman configured correctly
  ansible.builtin.lineinfile:
    path: /etc/layman/layman.cfg
    regexp: "^#?conf_type :"
    line: "conf_type : repos.conf"
    state: present
  tags: portage_init,layman_init,layman_conf

- name: (Re)build layman.conf and create eix database
  block:
    - name: Rebuild /etc/portage/repos.conf/layman.conf
      ansible.builtin.command: layman-updater -R
      tags: portage_init,layman_init
    - name: create eix database after install
      ansible.builtin.command: eix-update 
      tags: portage_init,eix_init,eix
  when: portage_init_force is defined and portage_init_force | bool
